/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.0.12
 * Generated at: 2021-11-12 06:45:16 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.hr.emp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import com.sample.vo.Employee;
import com.sample.dao.EmployeeDao;
import com.sample.vo.Job;
import com.sample.dao.JobDao;
import com.sample.vo.Department;
import java.util.List;
import com.sample.dao.DepartmentDao;

public final class form_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.sample.dao.EmployeeDao");
    _jspx_imports_classes.add("com.sample.vo.Department");
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("com.sample.vo.Employee");
    _jspx_imports_classes.add("com.sample.dao.DepartmentDao");
    _jspx_imports_classes.add("com.sample.vo.Job");
    _jspx_imports_classes.add("com.sample.dao.JobDao");
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"../../resources/css/style.css\">\r\n");
      out.write("<title>사원정보관리::등록폼</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	<h1>새 사원정보 등록폼</h1>\r\n");

	DepartmentDao departmentDao = new DepartmentDao();
	JobDao jobDao = new JobDao();
	EmployeeDao employeeDao = new EmployeeDao();
	
	// 전체 부서목록 조회하기
	List<Department> departments = departmentDao.getAllDepartments();
	// 전체 직종목록 조회하기
	List<Job> jobs = jobDao.getAllJobs();
	// 전체 관리자목록 조회하기
	List<Employee> managers = employeeDao.getAllManagers();

      out.write("\r\n");
      out.write("	<div>\r\n");
      out.write("		<form class=\"well\" method=\"post\" action=\"register.jsp\">\r\n");
      out.write("			<div class=\"form-group\">\r\n");
      out.write("				<label>소속부서</label>\r\n");
      out.write("				<select name=\"deptId\">\r\n");
      out.write("					<option value=\"\" selected=\"selected\" disabled=\"disabled\">부서를 선택하세요</option>\r\n");

	for(Department dept : departments) {

      out.write("\r\n");
      out.write("					<option value=\"");
      out.print(dept.getId() );
      out.write('"');
      out.write('>');
      out.write(' ');
      out.print(dept.getName() );
      out.write("</option>\r\n");

	}

      out.write("\r\n");
      out.write("				</select>\r\n");
      out.write("			</div>\r\n");
      out.write("			<div class=\"form-group\">\r\n");
      out.write("				<label>직종</label>\r\n");
      out.write("				<select name=\"jobId\">\r\n");
      out.write("					<option value=\"\" selected=\"selected\" disabled=\"disabled\">직종을 선택하세요</option>\r\n");

	for (Job job : jobs) {

      out.write("	\r\n");
      out.write("					<option value=\"");
      out.print(job.getId() );
      out.write('"');
      out.write('>');
      out.write(' ');
      out.print(job.getTitle() );
      out.write(' ');
      out.write('(');
      out.print(job.getMinSalary() );
      out.write(' ');
      out.write('~');
      out.write(' ');
      out.print(job.getMaxSalary() );
      out.write(" 달러)</option>\r\n");

	}

      out.write("\r\n");
      out.write("				</select>\r\n");
      out.write("			</div>\r\n");
      out.write("			<div class=\"form-group\">\r\n");
      out.write("				<label>이름1</label>\r\n");
      out.write("				<input type=\"text\" name=\"firstName\" />\r\n");
      out.write("			</div>\r\n");
      out.write("			<div class=\"form-group\">\r\n");
      out.write("				<label>이름2</label>\r\n");
      out.write("				<input type=\"text\" name=\"lastName\" />\r\n");
      out.write("			</div>\r\n");
      out.write("			<div class=\"form-group\">\r\n");
      out.write("				<label>이메일</label>\r\n");
      out.write("				<input type=\"text\" name=\"email\" />\r\n");
      out.write("			</div>\r\n");
      out.write("			<div class=\"form-group\">\r\n");
      out.write("				<label>전화번호</label>\r\n");
      out.write("				<input type=\"text\" name=\"phoneNumber\" />\r\n");
      out.write("			</div>\r\n");
      out.write("			<div class=\"form-group\">\r\n");
      out.write("				<label>급여</label>\r\n");
      out.write("				<input type=\"number\" name=\"salary\" />\r\n");
      out.write("			</div>\r\n");
      out.write("			<div class=\"form-group\">\r\n");
      out.write("				<label>커미션</label>\r\n");
      out.write("				<input type=\"radio\" name=\"commissionPct\" value=\"0.1\" />0.1\r\n");
      out.write("				<input type=\"radio\" name=\"commissionPct\" value=\"0.15\" />0.15\r\n");
      out.write("				<input type=\"radio\" name=\"commissionPct\" value=\"0.2\" />0.2\r\n");
      out.write("				<input type=\"radio\" name=\"commissionPct\" value=\"0.25\" checked=\"checked\" />0.25\r\n");
      out.write("				<input type=\"radio\" name=\"commissionPct\" value=\"0.3\" />0.3\r\n");
      out.write("				<input type=\"radio\" name=\"commissionPct\" value=\"0.35\" />0.35\r\n");
      out.write("				<input type=\"radio\" name=\"commissionPct\" value=\"0.4\" />0.4\r\n");
      out.write("				<input type=\"radio\" name=\"commissionPct\" value=\"0.45\" />0.45\r\n");
      out.write("			</div>\r\n");
      out.write("			<div class=\"form-group\">\r\n");
      out.write("				<label>관리자</label>\r\n");
      out.write("				<select name=\"managerId\">\r\n");
      out.write("				<option value=\"\" disabled=\"disabled\" selected=\"selected\"> 관리자를 선택하세요</option>\r\n");

	for (Employee manager : managers) {

      out.write("\r\n");
      out.write("					<option value=\"");
      out.print(manager.getId() );
      out.write('"');
      out.write('>');
      out.write(' ');
      out.print(manager.getFirstName() );
      out.write(' ');
      out.print(manager.getLastName() );
      out.write(' ');
      out.write('(');
      out.print(manager.getDepartment().getName() );
      out.write(")</option>\r\n");

	}

      out.write("					\r\n");
      out.write("				</select>\r\n");
      out.write("			</div>\r\n");
      out.write("			<div class=\"text-right\">\r\n");
      out.write("				<button type=\"submit\" class=\"btn\">등록</button>\r\n");
      out.write("			</div>\r\n");
      out.write("		</form>\r\n");
      out.write("	</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
